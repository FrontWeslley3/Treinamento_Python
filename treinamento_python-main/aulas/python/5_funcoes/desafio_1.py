'''
üîπ Desafio: Gerador de Pot√™ncias com Fun√ß√µes

üìå Enunciado:
Crie um programa em Python que:

- Pe√ßa ao usu√°rio um n√∫mero inteiro positivo.
- Calcule e exiba a pot√™ncia desse n√∫mero de 1 a 10 (ou seja: n¬π, n¬≤, n¬≥ ... at√© n¬π‚Å∞).
- Use uma fun√ß√£o chamada mostrar_potencias(numero) para mostrar as pot√™ncias.
- O programa s√≥ deve parar quando o usu√°rio digitar "sair".
'''

# Fun√ß√£o respons√°vel por exibir as pot√™ncias do n√∫mero recebido
def mostrar_potencias(numero):
    '''
    Esta fun√ß√£o recebe um n√∫mero inteiro positivo como par√¢metro
    e exibe sua pot√™ncia de 1 at√© 10.

    Exemplo de sa√≠da para n√∫mero = 2:
    2 ^ 1 = 2
    2 ^ 2 = 4
    2 ^ 3 = 8
    ...
    2 ^ 10 = 1024
    '''
    for i in range(1, 11):
        print(f"{numero} ^ {i} = {numero ** i}")

# Loop principal do programa
while True:
    # Solicita ao usu√°rio que digite um n√∫mero inteiro positivo ou "sair" para encerrar o programa
    numero = input("Digite um n√∫mero inteiro positivo ou 'sair' para encerrar: ")

    # Verifica se o usu√°rio deseja sair do programa
    if numero.lower() == "sair":
        break  # Encerra o loop e finaliza o programa

    try:
        # Converte a entrada para inteiro
        numero = int(numero)

        # Verifica se o n√∫mero √© positivo
        if numero > 0:
            # Chama a fun√ß√£o para exibir as pot√™ncias
            mostrar_potencias(numero)
        else:
            # Caso o n√∫mero seja zero ou negativo, exibe uma mensagem de aviso
            print("Por favor, digite um n√∫mero inteiro positivo.")
    except ValueError:
        # Trata o erro caso a convers√£o para inteiro falhe (entrada inv√°lida)
        print("Entrada inv√°lida. Por favor, digite um n√∫mero inteiro.")
