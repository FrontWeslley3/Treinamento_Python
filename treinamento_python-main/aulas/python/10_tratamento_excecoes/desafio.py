# üîπ DESAFIO: Calculadora com Tratamento de Exce√ß√µes üßÆ

# üìå Enunciado:
# Voc√™ deve criar um programa que funcione como uma calculadora simples, permitindo
# ao usu√°rio inserir dois n√∫meros e uma opera√ß√£o matem√°tica (+, -, *, /).
# O programa deve tratar os seguintes tipos de exce√ß√£o:
# 1. Entrada inv√°lida (se o usu√°rio inserir algo que n√£o seja um n√∫mero). Exce√ß√£o: ValueError
# 2. Divis√£o por zero. Exce√ß√£o: ZeroDivisionError
# 3. Opera√ß√£o inv√°lida (caso o usu√°rio insira um operador desconhecido). Exce√ß√£o: ValueError
#
# ‚úÖ Tarefa:
# - Criar uma fun√ß√£o `calculadora(num1, num2, operacao)` que realiza a opera√ß√£o desejada.
# - Utilizar `try-except` para capturar exce√ß√µes.
# - Exibir mensagens de erro apropriadas para cada caso.
# - O programa deve continuar rodando at√© que o usu√°rio escolha sair.
#
# üî• Dica:
# - Utilize `input()` para capturar os valores digitados.
# - Use um loop `while` para manter a calculadora funcionando at√© que o usu√°rio digite 'sair'.
# - Lembre-se de converter os n√∫meros para `float` dentro de um bloco `try`.

# ‚úîÔ∏è **Capture exce√ß√µes espec√≠ficas sempre que poss√≠vel**
# ‚úîÔ∏è **Evite `except Exception` sem necessidade**
# ‚úîÔ∏è **Use `finally` para fechar conex√µes, arquivos ou liberar recursos**
# ‚úîÔ∏è **Crie exce√ß√µes personalizadas quando necess√°rio**
# ‚úîÔ∏è **Forne√ßa mensagens de erro claras para o usu√°rio**

def calculadora(num1, num2, operacao):
    try:
        if operacao == '+':
            return num1 + num2
        elif operacao == '-':
            return num1 - num2
        elif operacao == '*':
            return num1 * num2
        elif operacao == '/':
            if num2 == 0:
                raise ZeroDivisionError("Divis√¢o por zero!")
            return num1 / num2
        else:
            raise ValueError("Opera√ß√£o inv√°lida!")
    except ZeroDivisionError as e:
        print(f"Erro: {e}")
        return None
    except ValueError as e:
        print(f"Erro: {e}")
        return None
    except Exception as e:
        print(f"Erro: {e}")
        return None
    finally:
        print("Calculadora encerrada!")

while True:
    num1 = float(input("Digite o primeiro n√∫mero: "))
    num2 = float(input("Digite o segundo n√∫mero:"))
    operacao = input("Digite a opera√ß√£o desejada (+, -, *, / ):")

    resultado = calculadora(num1, num2, operacao)
    if resultado is not None:
        print("resultado: ", resultado)

    continuar = input("Deseja realizar outra opera√ß√£o? (sim/n√£o):")
    if continuar == "n√£o":
        break
        



        
        
